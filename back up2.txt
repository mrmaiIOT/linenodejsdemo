"use strict";

const express = require("express");
const bodyParser = require("body-parser");

const restService = express();

var MicroGear = require('microgear');

const KEY    = "h5tm18lfObCbamA";
const SECRET = "pkwVRhXlUGGIbjZFlqOluKk5D";
const APPID     = "linebot1";
var PK5Message 
var speech = "Hello test";
var microgear = MicroGear.create({
    key : KEY,
    secret : SECRET
});
microgear.connect(APPID);

main();

restService.use(
  bodyParser.urlencoded({
    extended: true
  })
);

restService.use(bodyParser.json());

restService.post("/Jawis", function(req, res) {
  
  
   // req.body.queryResult &&
   // req.body.queryResult.parameters &&
   // req.body.queryResult.parameters.echoText
    //  ? req.body.queryResult.parameters.echoText
    //  : "Seems like some problem. Speak again.";
    
    var speechResponse = {
      google: {
        expectUserResponse: true,
        richResponse: {
          items: [
            {
              simpleResponse: {
                textToSpeech: speech
              }
            }
          ]
        }
      }
    };

    return res.json({
      payload: speechResponse,
      //data: speechResponse,
      fulfillmentText: speech,
      speech: speech,
      displayText: speech,
      source: "webhook-echo-sample"
    });
  
});

restService.listen(process.env.PORT || 8000, function() {
  console.log("Server up and listening");
});

async function main(){
  PK5Message="xx"
  let a = sayHello();
  console.log(a);
  microgearconnected();
  
  if(PK5Message=="xx"){
      microgearmessage();
      let b = await delaySayHello();
      console.log(b);
  }
  if(PK5Message!=="xx"){
      //let C = await microgearmessage();speech = body;
      console.log('incoming2 : '+PK5Message);
      console.log('speech : '+speech);
  }
  
  
  
  //let c = await microgearmessage();
  //console.log(a);
  //console.log(b);
  //console.log(c);
}

function sayHello(){
  return "Hello";
}
function delaySayHello() {
  return new Promise((resolve, reject) => {
      setTimeout(()=>{
          resolve("Delay Hello");
      }, 5000);
  });
}
async function longTimeHello(){
  await setTimeout(()=>{}, 1000); // เพื่อทำการ delay การทำงาน
  return "Long Time Hello";
}
function microgearconnected(){
   
  microgear.on('connected', function() {
    
      console.log('Connected...');
      microgear.setalias("MasterMai");
       console.log('Start...');
       microgear.chat('PK5', '01/99/01');
      
  });
  }
  
  
  async function microgearmessage(){
      
       microgear.on('message', function(topic,body) {
      //console.log('incoming : '+topic+' : '+body);
      speech =" ";
      speech += body;
       PK5Message=body;
      //console.log('incoming1 : '+PK5Message);
      
   });
   return PK5Message;
  }